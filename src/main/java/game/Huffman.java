package org.lichess.compression.game;

import org.lichess.compression.BitReader;
import org.lichess.compression.BitWriter;

class Huffman {
    public static void write(int value, BitWriter writer, int plies) {
        Symbol symbol;
        if (plies <= 40) {
            symbol = OPENING_CODES[value];
        }
        else if (plies >= 41 && plies <= 80) {
            symbol = MIDDLEGAME_CODES[value];
        }
        else {
            symbol = ENDGAME_CODES[value];
        }
        writer.writeBits(symbol.code, symbol.bits);
    }

    public static int read(BitReader reader, int plies) {
        Node node;
        if (plies <= 40) {
            node = OPENING_ROOT;
        }
        else if (plies >= 41 && plies <= 80) {
            node = MIDDLEGAME_ROOT;
        }
        else {
            node = ENDGAME_ROOT;
        }

        while (node.zero != null && node.one != null) {
            int bit = reader.readBits(1);
            if (bit == 0) node = node.zero;
            else node = node.one;
        }
        return node.leaf;
    }

    private static class Symbol {
        public final int code;
        public final int bits;

        public Symbol(int code, int bits) {
            this.code = code;
            this.bits = bits;
        }
    }

    private static class Node {
        public final Node zero;
        public final Node one;
        public final int leaf;

        public Node(int leaf) {
            this.zero = null;
            this.one = null;
            this.leaf = leaf;
        }

        public Node(Node zero, Node one) {
            this.zero = zero;
            this.one = one;
            this.leaf = -1;
        }
    }

    private static Node buildTree(int code, int bits, Symbol codes[]) {
        assert bits <= 32;

        for (int i = 0; i <= 0xff; i++) {
            if (codes[i].code == code && codes[i].bits == bits) {
                return new Node(i);
            }
        }

        return new Node(
            buildTree(code << 1, bits + 1, codes),
            buildTree((code << 1) | 1, bits + 1, codes));
    }

    // Game phase specific Huffman code for indexes in the legal move list. Precomputed based on
    // actual frequency in 16,232,215 rated games.
    //
    // This is based on a maximum of 256 legal moves per position, but the
    // highest indexes did not actually occur. They were manually assigned a
    // frequency of 1 and ordered.
    //
    // On the training corpus this achieves:
    // 37.03 bytes per game
    // 0.551 bytes per move
    private static final Symbol OPENING_CODES[] = {
        new Symbol(0b10, 2), // 0: 121315785 19.87%
        new Symbol(0b11, 3), // 1: 78025075 12.78%
        new Symbol(0b0, 4), // 2: 51181707 8.38%
        new Symbol(0b10, 4), // 3: 39424880 6.46%
        new Symbol(0b11, 4), // 4: 31963887 5.23%
        new Symbol(0b1101, 4), // 5: 24706765 4.05%
        new Symbol(0b10, 5), // 6: 19383577 3.17%
        new Symbol(0b1000, 5), // 7: 16295743 2.67%
        new Symbol(0b1010, 5), // 8: 14396232 2.36%
        new Symbol(0b1011, 5), // 9: 13485998 2.21%
        new Symbol(0b11001, 5), // 10: 12250987 2.01%
        new Symbol(0b11101, 5), // 11: 11541111 1.89%
        new Symbol(0b11110, 5), // 12: 12682733 2.08%
        new Symbol(0b110, 6), // 13: 10268727 1.68%
        new Symbol(0b10010, 6), // 14: 10864244 1.78%
        new Symbol(0b10011, 6), // 15: 9344906 1.53%
        new Symbol(0b110001, 6), // 16: 8858220 1.45%
        new Symbol(0b111001, 6), // 17: 9201818 1.51%
        new Symbol(0b111111, 6), // 18: 9341214 1.53%
        new Symbol(0b1111, 7), // 19: 8761573 1.43%
        new Symbol(0b1100001, 7), // 20: 8110161 1.33%
        new Symbol(0b1110001, 7), // 21: 8720753 1.43%
        new Symbol(0b1111101, 7), // 22: 8292537 1.36%
        new Symbol(0b11101, 8), // 23: 8220250 1.35%
        new Symbol(0b11000001, 8), // 24: 8922070 1.46%
        new Symbol(0b11100001, 8), // 25: 8162595 1.34%
        new Symbol(0b11111001, 8), // 26: 7228924 1.18%
        new Symbol(0b111001, 9), // 27: 7131365 1.17%
        new Symbol(0b110000001, 9), // 28: 5629569 0.92%
        new Symbol(0b111000001, 9), // 29: 4999708 0.82%
        new Symbol(0b111110001, 9), // 30: 4303734 0.70%
        new Symbol(0b1110001, 10), // 31: 3621610 0.59%
        new Symbol(0b1100000001, 10), // 32: 3056415 0.50%
        new Symbol(0b1110000001, 10), // 33: 2640161 0.43%
        new Symbol(0b1111100001, 10), // 34: 1970583 0.32%
        new Symbol(0b11100001, 11), // 35: 1593893 0.26%
        new Symbol(0b11000000001, 11), // 36: 1224932 0.20%
        new Symbol(0b11100000001, 11), // 37: 932686 0.15%
        new Symbol(0b11111000001, 11), // 38: 710638 0.12%
        new Symbol(0b111000001, 12), // 39: 564472 0.09%
        new Symbol(0b110000000001, 12), // 40: 379717 0.06%
        new Symbol(0b111000000001, 12), // 41: 285747 0.05%
        new Symbol(0b111110000000, 12), // 42: 201334 0.03%
        new Symbol(0b1110000000, 13), // 43: 143649 0.02%
        new Symbol(0b1100000000000, 13), // 44: 98798 0.02%
        new Symbol(0b1110000000000, 13), // 45: 68049 0.01%
        new Symbol(0b1111100000010, 13), // 46: 46326 0.01%
        new Symbol(0b11100000010, 14), // 47: 30738 0.01%
        new Symbol(0b11000000000010, 14), // 48: 20611 0.00%
        new Symbol(0b11100000000010, 14), // 49: 13325 0.00%
        new Symbol(0b11111000000110, 14), // 50: 8958 0.00%
        new Symbol(0b111000000111, 15), // 51: 5797 0.00%
        new Symbol(0b110000000000111, 15), // 52: 3663 0.00%
        new Symbol(0b111000000000111, 15), // 53: 2296 0.00%
        new Symbol(0b1110000001100, 16), // 54: 1479 0.00%
        new Symbol(0b1100000000001100, 16), // 55: 895 0.00%
        new Symbol(0b1110000000001100, 16), // 56: 575 0.00%
        new Symbol(0b1111100000011101, 16), // 57: 341 0.00%
        new Symbol(0b1111100000011111, 16), // 58: 225 0.00%
        new Symbol(0b11100000011011, 17), // 59: 123 0.00%
        new Symbol(0b11000000000011011, 17), // 60: 90 0.00%
        new Symbol(0b11111000000111000, 17), // 61: 45 0.00%
        new Symbol(0b11111000000111100, 17), // 62: 36 0.00%
        new Symbol(0b111000000110101, 18), // 63: 18 0.00%
        new Symbol(0b110000000000110101, 18), // 64: 9 0.00%
        new Symbol(0b111000000000110100, 18), // 65: 3 0.00%
        new Symbol(0b111000000000110111, 18), // 66: 4 0.00%
        new Symbol(0b111110000001110011, 18), // 67: 1 0.00%
        new Symbol(0b111110000001111010, 18), // 68: 1 0.00%
        new Symbol(0b1110000001101000, 19), // 69: 0 0.00%
        new Symbol(0b1100000000001101000, 19), // 70: 0 0.00%
        new Symbol(0b1110000000001101100, 19), // 71: 0 0.00%
        new Symbol(0b1111100000011100101, 19), // 72: 0 0.00%
        new Symbol(0b1111100000011100100, 19), // 73: 0 0.00%
        new Symbol(0b1111100000011110111, 19), // 74: 0 0.00%
        new Symbol(0b11100000000011010101, 20), // 75: 0 0.00%
        new Symbol(0b11100000000011010100, 20), // 76: 0 0.00%
        new Symbol(0b11000000000011010011, 20), // 77: 0 0.00%
        new Symbol(0b11100000000011010111, 20), // 78: 0 0.00%
        new Symbol(0b11111000000111101100, 20), // 79: 0 0.00%
        new Symbol(0b111000000110100100, 21), // 80: 0 0.00%
        new Symbol(0b111000000110100101, 21), // 81: 0 0.00%
        new Symbol(0b111000000000110110100, 21), // 82: 0 0.00%
        new Symbol(0b111000000000110110110, 21), // 83: 0 0.00%
        new Symbol(0b111000000000110110101, 21), // 84: 0 0.00%
        new Symbol(0b111110000001111011011, 21), // 85: 0 0.00%
        new Symbol(0b1110000001101001100, 22), // 86: 0 0.00%
        new Symbol(0b1110000000001101011000, 22), // 87: 0 0.00%
        new Symbol(0b1110000001101001101, 22), // 88: 0 0.00%
        new Symbol(0b1110000000001101011001, 22), // 89: 0 0.00%
        new Symbol(0b1110000000001101011010, 22), // 90: 0 0.00%
        new Symbol(0b1110000000001101011011, 22), // 91: 0 0.00%
        new Symbol(0b1111100000011110110100, 22), // 92: 0 0.00%
        new Symbol(0b11100000011010011101, 23), // 93: 0 0.00%
        new Symbol(0b11111000000111101101011, 23), // 94: 0 0.00%
        new Symbol(0b11111000000111101101010, 23), // 95: 0 0.00%
        new Symbol(0b11100000000011011011100, 23), // 96: 0 0.00%
        new Symbol(0b11100000000011011011101, 23), // 97: 0 0.00%
        new Symbol(0b110000000000110100101111, 24), // 98: 0 0.00%
        new Symbol(0b111000000110100111001, 24), // 99: 0 0.00%
        new Symbol(0b111000000000110110111100, 24), // 100: 0 0.00%
        new Symbol(0b111000000000110110111101, 24), // 101: 0 0.00%
        new Symbol(0b111000000000110110111110, 24), // 102: 0 0.00%
        new Symbol(0b1110000000001101101111110, 25), // 103: 0 0.00%
        new Symbol(0b1110000001101001110000, 25), // 104: 0 0.00%
        new Symbol(0b1110000000001101101111111, 25), // 105: 0 0.00%
        new Symbol(0b11100000011010011100010, 26), // 106: 0 0.00%
        new Symbol(0b11100000011010011100011, 26), // 107: 0 0.00%
        new Symbol(0b11100000011010011110001, 26), // 108: 0 0.00%
        new Symbol(0b11100000011010011110010, 26), // 109: 0 0.00%
        new Symbol(0b11100000011010011110011, 26), // 110: 0 0.00%
        new Symbol(0b11100000011010011110101, 26), // 111: 0 0.00%
        new Symbol(0b111000000110100111100000, 27), // 112: 0 0.00%
        new Symbol(0b111000000110100111100001, 27), // 113: 0 0.00%
        new Symbol(0b111000000110100111101000, 27), // 114: 0 0.00%
        new Symbol(0b111000000110100111101001, 27), // 115: 0 0.00%
        new Symbol(0b111000000110100111101100, 27), // 116: 0 0.00%
        new Symbol(0b111000000110100111101101, 27), // 117: 0 0.00%
        new Symbol(0b111000000110100111101110, 27), // 118: 0 0.00%
        new Symbol(0b111000000110100111101111, 27), // 119: 0 0.00%
        new Symbol(0b111000000110100111110000, 27), // 120: 0 0.00%
        new Symbol(0b111000000110100111110001, 27), // 121: 0 0.00%
        new Symbol(0b111000000110100111110010, 27), // 122: 0 0.00%
        new Symbol(0b111000000110100111110011, 27), // 123: 0 0.00%
        new Symbol(0b111000000110100111110100, 27), // 124: 0 0.00%
        new Symbol(0b111000000110100111110101, 27), // 125: 0 0.00%
        new Symbol(0b111000000110100111110110, 27), // 126: 0 0.00%
        new Symbol(0b111000000110100111110111, 27), // 127: 0 0.00%
        new Symbol(0b111000000110100111111000, 27), // 128: 0 0.00%
        new Symbol(0b111000000110100111111001, 27), // 129: 0 0.00%
        new Symbol(0b111000000110100111111010, 27), // 130: 0 0.00%
        new Symbol(0b111000000110100111111011, 27), // 131: 0 0.00%
        new Symbol(0b111000000110100111111100, 27), // 132: 0 0.00%
        new Symbol(0b111000000110100111111101, 27), // 133: 0 0.00%
        new Symbol(0b111000000110100111111110, 27), // 134: 0 0.00%
        new Symbol(0b111000000110100111111111, 27), // 135: 0 0.00%
        new Symbol(0b110000000000110100100000000, 27), // 136: 0 0.00%
        new Symbol(0b110000000000110100100000001, 27), // 137: 0 0.00%
        new Symbol(0b110000000000110100100000010, 27), // 138: 0 0.00%
        new Symbol(0b110000000000110100100000011, 27), // 139: 0 0.00%
        new Symbol(0b110000000000110100100000100, 27), // 140: 0 0.00%
        new Symbol(0b110000000000110100100000101, 27), // 141: 0 0.00%
        new Symbol(0b110000000000110100100000110, 27), // 142: 0 0.00%
        new Symbol(0b110000000000110100100000111, 27), // 143: 0 0.00%
        new Symbol(0b110000000000110100100001000, 27), // 144: 0 0.00%
        new Symbol(0b110000000000110100100001001, 27), // 145: 0 0.00%
        new Symbol(0b110000000000110100100001010, 27), // 146: 0 0.00%
        new Symbol(0b110000000000110100100001011, 27), // 147: 0 0.00%
        new Symbol(0b110000000000110100100001100, 27), // 148: 0 0.00%
        new Symbol(0b110000000000110100100001101, 27), // 149: 0 0.00%
        new Symbol(0b110000000000110100100001110, 27), // 150: 0 0.00%
        new Symbol(0b110000000000110100100001111, 27), // 151: 0 0.00%
        new Symbol(0b110000000000110100100010000, 27), // 152: 0 0.00%
        new Symbol(0b110000000000110100100010001, 27), // 153: 0 0.00%
        new Symbol(0b110000000000110100100010010, 27), // 154: 0 0.00%
        new Symbol(0b110000000000110100100010011, 27), // 155: 0 0.00%
        new Symbol(0b110000000000110100100010100, 27), // 156: 0 0.00%
        new Symbol(0b110000000000110100100010101, 27), // 157: 0 0.00%
        new Symbol(0b110000000000110100100010110, 27), // 158: 0 0.00%
        new Symbol(0b110000000000110100100010111, 27), // 159: 0 0.00%
        new Symbol(0b110000000000110100100011000, 27), // 160: 0 0.00%
        new Symbol(0b110000000000110100100011001, 27), // 161: 0 0.00%
        new Symbol(0b110000000000110100100011010, 27), // 162: 0 0.00%
        new Symbol(0b110000000000110100100011011, 27), // 163: 0 0.00%
        new Symbol(0b110000000000110100100011100, 27), // 164: 0 0.00%
        new Symbol(0b110000000000110100100011101, 27), // 165: 0 0.00%
        new Symbol(0b110000000000110100100011110, 27), // 166: 0 0.00%
        new Symbol(0b110000000000110100100011111, 27), // 167: 0 0.00%
        new Symbol(0b110000000000110100100100000, 27), // 168: 0 0.00%
        new Symbol(0b110000000000110100100100001, 27), // 169: 0 0.00%
        new Symbol(0b110000000000110100100100010, 27), // 170: 0 0.00%
        new Symbol(0b110000000000110100100100011, 27), // 171: 0 0.00%
        new Symbol(0b110000000000110100100100100, 27), // 172: 0 0.00%
        new Symbol(0b110000000000110100100100101, 27), // 173: 0 0.00%
        new Symbol(0b110000000000110100100100110, 27), // 174: 0 0.00%
        new Symbol(0b110000000000110100100100111, 27), // 175: 0 0.00%
        new Symbol(0b110000000000110100100101000, 27), // 176: 0 0.00%
        new Symbol(0b110000000000110100100101001, 27), // 177: 0 0.00%
        new Symbol(0b110000000000110100100101010, 27), // 178: 0 0.00%
        new Symbol(0b110000000000110100100101011, 27), // 179: 0 0.00%
        new Symbol(0b110000000000110100100101100, 27), // 180: 0 0.00%
        new Symbol(0b110000000000110100100101101, 27), // 181: 0 0.00%
        new Symbol(0b110000000000110100100101110, 27), // 182: 0 0.00%
        new Symbol(0b110000000000110100100101111, 27), // 183: 0 0.00%
        new Symbol(0b110000000000110100100110000, 27), // 184: 0 0.00%
        new Symbol(0b110000000000110100100110001, 27), // 185: 0 0.00%
        new Symbol(0b110000000000110100100110010, 27), // 186: 0 0.00%
        new Symbol(0b110000000000110100100110011, 27), // 187: 0 0.00%
        new Symbol(0b110000000000110100100110100, 27), // 188: 0 0.00%
        new Symbol(0b110000000000110100100110101, 27), // 189: 0 0.00%
        new Symbol(0b110000000000110100100110110, 27), // 190: 0 0.00%
        new Symbol(0b110000000000110100100110111, 27), // 191: 0 0.00%
        new Symbol(0b110000000000110100100111000, 27), // 192: 0 0.00%
        new Symbol(0b110000000000110100100111001, 27), // 193: 0 0.00%
        new Symbol(0b110000000000110100100111010, 27), // 194: 0 0.00%
        new Symbol(0b110000000000110100100111011, 27), // 195: 0 0.00%
        new Symbol(0b110000000000110100100111100, 27), // 196: 0 0.00%
        new Symbol(0b110000000000110100100111101, 27), // 197: 0 0.00%
        new Symbol(0b110000000000110100100111110, 27), // 198: 0 0.00%
        new Symbol(0b110000000000110100100111111, 27), // 199: 0 0.00%
        new Symbol(0b110000000000110100101000000, 27), // 200: 0 0.00%
        new Symbol(0b110000000000110100101000001, 27), // 201: 0 0.00%
        new Symbol(0b110000000000110100101000010, 27), // 202: 0 0.00%
        new Symbol(0b110000000000110100101000011, 27), // 203: 0 0.00%
        new Symbol(0b110000000000110100101000100, 27), // 204: 0 0.00%
        new Symbol(0b110000000000110100101000101, 27), // 205: 0 0.00%
        new Symbol(0b110000000000110100101000110, 27), // 206: 0 0.00%
        new Symbol(0b110000000000110100101000111, 27), // 207: 0 0.00%
        new Symbol(0b110000000000110100101001000, 27), // 208: 0 0.00%
        new Symbol(0b110000000000110100101001001, 27), // 209: 0 0.00%
        new Symbol(0b110000000000110100101001010, 27), // 210: 0 0.00%
        new Symbol(0b110000000000110100101001011, 27), // 211: 0 0.00%
        new Symbol(0b110000000000110100101001100, 27), // 212: 0 0.00%
        new Symbol(0b110000000000110100101001101, 27), // 213: 0 0.00%
        new Symbol(0b110000000000110100101001110, 27), // 214: 0 0.00%
        new Symbol(0b110000000000110100101001111, 27), // 215: 0 0.00%
        new Symbol(0b110000000000110100101010000, 27), // 216: 0 0.00%
        new Symbol(0b110000000000110100101010001, 27), // 217: 0 0.00%
        new Symbol(0b110000000000110100101010010, 27), // 218: 0 0.00%
        new Symbol(0b110000000000110100101010011, 27), // 219: 0 0.00%
        new Symbol(0b110000000000110100101010100, 27), // 220: 0 0.00%
        new Symbol(0b110000000000110100101010101, 27), // 221: 0 0.00%
        new Symbol(0b110000000000110100101010110, 27), // 222: 0 0.00%
        new Symbol(0b110000000000110100101010111, 27), // 223: 0 0.00%
        new Symbol(0b110000000000110100101011000, 27), // 224: 0 0.00%
        new Symbol(0b110000000000110100101011001, 27), // 225: 0 0.00%
        new Symbol(0b110000000000110100101011010, 27), // 226: 0 0.00%
        new Symbol(0b110000000000110100101011011, 27), // 227: 0 0.00%
        new Symbol(0b110000000000110100101011100, 27), // 228: 0 0.00%
        new Symbol(0b110000000000110100101011101, 27), // 229: 0 0.00%
        new Symbol(0b110000000000110100101011110, 27), // 230: 0 0.00%
        new Symbol(0b110000000000110100101011111, 27), // 231: 0 0.00%
        new Symbol(0b110000000000110100101100000, 27), // 232: 0 0.00%
        new Symbol(0b110000000000110100101100001, 27), // 233: 0 0.00%
        new Symbol(0b110000000000110100101100010, 27), // 234: 0 0.00%
        new Symbol(0b110000000000110100101100011, 27), // 235: 0 0.00%
        new Symbol(0b110000000000110100101100100, 27), // 236: 0 0.00%
        new Symbol(0b110000000000110100101100101, 27), // 237: 0 0.00%
        new Symbol(0b110000000000110100101100110, 27), // 238: 0 0.00%
        new Symbol(0b110000000000110100101100111, 27), // 239: 0 0.00%
        new Symbol(0b110000000000110100101101000, 27), // 240: 0 0.00%
        new Symbol(0b110000000000110100101101001, 27), // 241: 0 0.00%
        new Symbol(0b110000000000110100101101010, 27), // 242: 0 0.00%
        new Symbol(0b110000000000110100101101011, 27), // 243: 0 0.00%
        new Symbol(0b110000000000110100101101100, 27), // 244: 0 0.00%
        new Symbol(0b110000000000110100101101101, 27), // 245: 0 0.00%
        new Symbol(0b110000000000110100101101110, 27), // 246: 0 0.00%
        new Symbol(0b110000000000110100101101111, 27), // 247: 0 0.00%
        new Symbol(0b110000000000110100101110000, 27), // 248: 0 0.00%
        new Symbol(0b110000000000110100101110001, 27), // 249: 0 0.00%
        new Symbol(0b110000000000110100101110010, 27), // 250: 0 0.00%
        new Symbol(0b110000000000110100101110011, 27), // 251: 0 0.00%
        new Symbol(0b110000000000110100101110100, 27), // 252: 0 0.00%
        new Symbol(0b110000000000110100101110101, 27), // 253: 0 0.00%
        new Symbol(0b110000000000110100101110110, 27), // 254: 0 0.00%
        new Symbol(0b110000000000110100101110111, 27), // 255: 0 0.00%
    };

    private static final Symbol MIDDLEGAME_CODES[] = {
        new Symbol(0b10, 2), // 0: 75325562 20.98%
        new Symbol(0b11, 3), // 1: 42512437 11.84%
        new Symbol(0b0, 4), // 2: 27439129 7.64%
        new Symbol(0b10, 4), // 3: 20529557 5.72%
        new Symbol(0b11, 4), // 4: 16687281 4.65%
        new Symbol(0b1101, 4), // 5: 13896594 3.87%
        new Symbol(0b10, 5), // 6: 12091031 3.37%
        new Symbol(0b1000, 5), // 7: 10983630 3.06%
        new Symbol(0b1010, 5), // 8: 10223434 2.85%
        new Symbol(0b1011, 5), // 9: 9601107 2.67%
        new Symbol(0b11001, 5), // 10: 9083123 2.53%
        new Symbol(0b11101, 5), // 11: 8629228 2.40%
        new Symbol(0b11110, 5), // 12: 8221185 2.29%
        new Symbol(0b110, 6), // 13: 7836730 2.18%
        new Symbol(0b10010, 6), // 14: 7464220 2.08%
        new Symbol(0b10011, 6), // 15: 7097131 1.98%
        new Symbol(0b110001, 6), // 16: 6716859 1.87%
        new Symbol(0b111001, 6), // 17: 6338928 1.77%
        new Symbol(0b111111, 6), // 18: 5962058 1.66%
        new Symbol(0b1111, 7), // 19: 5573759 1.55%
        new Symbol(0b1100001, 7), // 20: 5191205 1.45%
        new Symbol(0b1110001, 7), // 21: 4811723 1.34%
        new Symbol(0b1111101, 7), // 22: 4439510 1.24%
        new Symbol(0b11101, 8), // 23: 4078293 1.14%
        new Symbol(0b11000001, 8), // 24: 3725432 1.04%
        new Symbol(0b11100001, 8), // 25: 3380303 0.94%
        new Symbol(0b11111001, 8), // 26: 3050428 0.85%
        new Symbol(0b111001, 9), // 27: 2733737 0.76%
        new Symbol(0b110000001, 9), // 28: 2429532 0.68%
        new Symbol(0b111000001, 9), // 29: 2144659 0.60%
        new Symbol(0b111110001, 9), // 30: 1872769 0.52%
        new Symbol(0b1110001, 10), // 31: 1624027 0.45%
        new Symbol(0b1100000001, 10), // 32: 1389956 0.39%
        new Symbol(0b1110000001, 10), // 33: 1176684 0.33%
        new Symbol(0b1111100001, 10), // 34: 985610 0.27%
        new Symbol(0b11100001, 11), // 35: 816554 0.23%
        new Symbol(0b11000000001, 11), // 36: 665668 0.19%
        new Symbol(0b11100000001, 11), // 37: 537187 0.15%
        new Symbol(0b11111000001, 11), // 38: 428536 0.12%
        new Symbol(0b111000001, 12), // 39: 336998 0.09%
        new Symbol(0b110000000001, 12), // 40: 261587 0.07%
        new Symbol(0b111000000001, 12), // 41: 200527 0.06%
        new Symbol(0b111110000000, 12), // 42: 152862 0.04%
        new Symbol(0b1110000000, 13), // 43: 113822 0.03%
        new Symbol(0b1100000000000, 13), // 44: 84300 0.02%
        new Symbol(0b1110000000000, 13), // 45: 62709 0.02%
        new Symbol(0b1111100000010, 13), // 46: 45097 0.01%
        new Symbol(0b11100000010, 14), // 47: 32707 0.01%
        new Symbol(0b11000000000010, 14), // 48: 23387 0.01%
        new Symbol(0b11100000000010, 14), // 49: 16517 0.00%
        new Symbol(0b11111000000110, 14), // 50: 11790 0.00%
        new Symbol(0b111000000111, 15), // 51: 8289 0.00%
        new Symbol(0b110000000000111, 15), // 52: 5773 0.00%
        new Symbol(0b111000000000111, 15), // 53: 3982 0.00%
        new Symbol(0b1110000001100, 16), // 54: 2925 0.00%
        new Symbol(0b1100000000001100, 16), // 55: 1902 0.00%
        new Symbol(0b1110000000001100, 16), // 56: 1337 0.00%
        new Symbol(0b1111100000011101, 16), // 57: 949 0.00%
        new Symbol(0b1111100000011111, 16), // 58: 645 0.00%
        new Symbol(0b11100000011011, 17), // 59: 446 0.00%
        new Symbol(0b11000000000011011, 17), // 60: 330 0.00%
        new Symbol(0b11111000000111000, 17), // 61: 235 0.00%
        new Symbol(0b11111000000111100, 17), // 62: 171 0.00%
        new Symbol(0b111000000110101, 18), // 63: 135 0.00%
        new Symbol(0b110000000000110101, 18), // 64: 95 0.00%
        new Symbol(0b111000000000110100, 18), // 65: 69 0.00%
        new Symbol(0b111000000000110111, 18), // 66: 63 0.00%
        new Symbol(0b111110000001110011, 18), // 67: 43 0.00%
        new Symbol(0b111110000001111010, 18), // 68: 32 0.00%
        new Symbol(0b1110000001101000, 19), // 69: 18 0.00%
        new Symbol(0b1100000000001101000, 19), // 70: 11 0.00%
        new Symbol(0b1110000000001101100, 19), // 71: 13 0.00%
        new Symbol(0b1111100000011100101, 19), // 72: 12 0.00%
        new Symbol(0b1111100000011100100, 19), // 73: 11 0.00%
        new Symbol(0b1111100000011110111, 19), // 74: 10 0.00%
        new Symbol(0b11100000000011010101, 20), // 75: 2 0.00%
        new Symbol(0b11100000000011010100, 20), // 76: 4 0.00%
        new Symbol(0b11000000000011010011, 20), // 77: 1 0.00%
        new Symbol(0b11100000000011010111, 20), // 78: 4 0.00%
        new Symbol(0b11111000000111101100, 20), // 79: 2 0.00%
        new Symbol(0b111000000110100100, 21), // 80: 1 0.00%
        new Symbol(0b111000000110100101, 21), // 81: 0 0.00%
        new Symbol(0b111000000000110110100, 21), // 82: 0 0.00%
        new Symbol(0b111000000000110110110, 21), // 83: 1 0.00%
        new Symbol(0b111000000000110110101, 21), // 84: 0 0.00%
        new Symbol(0b111110000001111011011, 21), // 85: 0 0.00%
        new Symbol(0b1110000001101001100, 22), // 86: 1 0.00%
        new Symbol(0b1110000000001101011000, 22), // 87: 1 0.00%
        new Symbol(0b1110000001101001101, 22), // 88: 0 0.00%
        new Symbol(0b1110000000001101011001, 22), // 89: 0 0.00%
        new Symbol(0b1110000000001101011010, 22), // 90: 1 0.00%
        new Symbol(0b1110000000001101011011, 22), // 91: 0 0.00%
        new Symbol(0b1111100000011110110100, 22), // 92: 0 0.00%
        new Symbol(0b11100000011010011101, 23), // 93: 0 0.00%
        new Symbol(0b11111000000111101101011, 23), // 94: 0 0.00%
        new Symbol(0b11111000000111101101010, 23), // 95: 0 0.00%
        new Symbol(0b11100000000011011011100, 23), // 96: 0 0.00%
        new Symbol(0b11100000000011011011101, 23), // 97: 0 0.00%
        new Symbol(0b110000000000110100101111, 24), // 98: 2 0.00%
        new Symbol(0b111000000110100111001, 24), // 99: 0 0.00%
        new Symbol(0b111000000000110110111100, 24), // 100: 0 0.00%
        new Symbol(0b111000000000110110111101, 24), // 101: 0 0.00%
        new Symbol(0b111000000000110110111110, 24), // 102: 0 0.00%
        new Symbol(0b1110000000001101101111110, 25), // 103: 0 0.00%
        new Symbol(0b1110000001101001110000, 25), // 104: 0 0.00%
        new Symbol(0b1110000000001101101111111, 25), // 105: 0 0.00%
        new Symbol(0b11100000011010011100010, 26), // 106: 0 0.00%
        new Symbol(0b11100000011010011100011, 26), // 107: 0 0.00%
        new Symbol(0b11100000011010011110001, 26), // 108: 0 0.00%
        new Symbol(0b11100000011010011110010, 26), // 109: 0 0.00%
        new Symbol(0b11100000011010011110011, 26), // 110: 0 0.00%
        new Symbol(0b11100000011010011110101, 26), // 111: 0 0.00%
        new Symbol(0b111000000110100111100000, 27), // 112: 0 0.00%
        new Symbol(0b111000000110100111100001, 27), // 113: 0 0.00%
        new Symbol(0b111000000110100111101000, 27), // 114: 0 0.00%
        new Symbol(0b111000000110100111101001, 27), // 115: 0 0.00%
        new Symbol(0b111000000110100111101100, 27), // 116: 0 0.00%
        new Symbol(0b111000000110100111101101, 27), // 117: 0 0.00%
        new Symbol(0b111000000110100111101110, 27), // 118: 0 0.00%
        new Symbol(0b111000000110100111101111, 27), // 119: 0 0.00%
        new Symbol(0b111000000110100111110000, 27), // 120: 0 0.00%
        new Symbol(0b111000000110100111110001, 27), // 121: 0 0.00%
        new Symbol(0b111000000110100111110010, 27), // 122: 0 0.00%
        new Symbol(0b111000000110100111110011, 27), // 123: 0 0.00%
        new Symbol(0b111000000110100111110100, 27), // 124: 0 0.00%
        new Symbol(0b111000000110100111110101, 27), // 125: 0 0.00%
        new Symbol(0b111000000110100111110110, 27), // 126: 0 0.00%
        new Symbol(0b111000000110100111110111, 27), // 127: 0 0.00%
        new Symbol(0b111000000110100111111000, 27), // 128: 0 0.00%
        new Symbol(0b111000000110100111111001, 27), // 129: 0 0.00%
        new Symbol(0b111000000110100111111010, 27), // 130: 0 0.00%
        new Symbol(0b111000000110100111111011, 27), // 131: 0 0.00%
        new Symbol(0b111000000110100111111100, 27), // 132: 0 0.00%
        new Symbol(0b111000000110100111111101, 27), // 133: 0 0.00%
        new Symbol(0b111000000110100111111110, 27), // 134: 0 0.00%
        new Symbol(0b111000000110100111111111, 27), // 135: 0 0.00%
        new Symbol(0b110000000000110100100000000, 27), // 136: 0 0.00%
        new Symbol(0b110000000000110100100000001, 27), // 137: 0 0.00%
        new Symbol(0b110000000000110100100000010, 27), // 138: 0 0.00%
        new Symbol(0b110000000000110100100000011, 27), // 139: 0 0.00%
        new Symbol(0b110000000000110100100000100, 27), // 140: 0 0.00%
        new Symbol(0b110000000000110100100000101, 27), // 141: 0 0.00%
        new Symbol(0b110000000000110100100000110, 27), // 142: 0 0.00%
        new Symbol(0b110000000000110100100000111, 27), // 143: 0 0.00%
        new Symbol(0b110000000000110100100001000, 27), // 144: 0 0.00%
        new Symbol(0b110000000000110100100001001, 27), // 145: 0 0.00%
        new Symbol(0b110000000000110100100001010, 27), // 146: 0 0.00%
        new Symbol(0b110000000000110100100001011, 27), // 147: 0 0.00%
        new Symbol(0b110000000000110100100001100, 27), // 148: 0 0.00%
        new Symbol(0b110000000000110100100001101, 27), // 149: 0 0.00%
        new Symbol(0b110000000000110100100001110, 27), // 150: 0 0.00%
        new Symbol(0b110000000000110100100001111, 27), // 151: 0 0.00%
        new Symbol(0b110000000000110100100010000, 27), // 152: 0 0.00%
        new Symbol(0b110000000000110100100010001, 27), // 153: 0 0.00%
        new Symbol(0b110000000000110100100010010, 27), // 154: 0 0.00%
        new Symbol(0b110000000000110100100010011, 27), // 155: 0 0.00%
        new Symbol(0b110000000000110100100010100, 27), // 156: 0 0.00%
        new Symbol(0b110000000000110100100010101, 27), // 157: 0 0.00%
        new Symbol(0b110000000000110100100010110, 27), // 158: 0 0.00%
        new Symbol(0b110000000000110100100010111, 27), // 159: 0 0.00%
        new Symbol(0b110000000000110100100011000, 27), // 160: 0 0.00%
        new Symbol(0b110000000000110100100011001, 27), // 161: 0 0.00%
        new Symbol(0b110000000000110100100011010, 27), // 162: 0 0.00%
        new Symbol(0b110000000000110100100011011, 27), // 163: 0 0.00%
        new Symbol(0b110000000000110100100011100, 27), // 164: 0 0.00%
        new Symbol(0b110000000000110100100011101, 27), // 165: 0 0.00%
        new Symbol(0b110000000000110100100011110, 27), // 166: 0 0.00%
        new Symbol(0b110000000000110100100011111, 27), // 167: 0 0.00%
        new Symbol(0b110000000000110100100100000, 27), // 168: 0 0.00%
        new Symbol(0b110000000000110100100100001, 27), // 169: 0 0.00%
        new Symbol(0b110000000000110100100100010, 27), // 170: 0 0.00%
        new Symbol(0b110000000000110100100100011, 27), // 171: 0 0.00%
        new Symbol(0b110000000000110100100100100, 27), // 172: 0 0.00%
        new Symbol(0b110000000000110100100100101, 27), // 173: 0 0.00%
        new Symbol(0b110000000000110100100100110, 27), // 174: 0 0.00%
        new Symbol(0b110000000000110100100100111, 27), // 175: 0 0.00%
        new Symbol(0b110000000000110100100101000, 27), // 176: 0 0.00%
        new Symbol(0b110000000000110100100101001, 27), // 177: 0 0.00%
        new Symbol(0b110000000000110100100101010, 27), // 178: 0 0.00%
        new Symbol(0b110000000000110100100101011, 27), // 179: 0 0.00%
        new Symbol(0b110000000000110100100101100, 27), // 180: 0 0.00%
        new Symbol(0b110000000000110100100101101, 27), // 181: 0 0.00%
        new Symbol(0b110000000000110100100101110, 27), // 182: 0 0.00%
        new Symbol(0b110000000000110100100101111, 27), // 183: 0 0.00%
        new Symbol(0b110000000000110100100110000, 27), // 184: 0 0.00%
        new Symbol(0b110000000000110100100110001, 27), // 185: 0 0.00%
        new Symbol(0b110000000000110100100110010, 27), // 186: 0 0.00%
        new Symbol(0b110000000000110100100110011, 27), // 187: 0 0.00%
        new Symbol(0b110000000000110100100110100, 27), // 188: 0 0.00%
        new Symbol(0b110000000000110100100110101, 27), // 189: 0 0.00%
        new Symbol(0b110000000000110100100110110, 27), // 190: 0 0.00%
        new Symbol(0b110000000000110100100110111, 27), // 191: 0 0.00%
        new Symbol(0b110000000000110100100111000, 27), // 192: 0 0.00%
        new Symbol(0b110000000000110100100111001, 27), // 193: 0 0.00%
        new Symbol(0b110000000000110100100111010, 27), // 194: 0 0.00%
        new Symbol(0b110000000000110100100111011, 27), // 195: 0 0.00%
        new Symbol(0b110000000000110100100111100, 27), // 196: 0 0.00%
        new Symbol(0b110000000000110100100111101, 27), // 197: 0 0.00%
        new Symbol(0b110000000000110100100111110, 27), // 198: 0 0.00%
        new Symbol(0b110000000000110100100111111, 27), // 199: 0 0.00%
        new Symbol(0b110000000000110100101000000, 27), // 200: 0 0.00%
        new Symbol(0b110000000000110100101000001, 27), // 201: 0 0.00%
        new Symbol(0b110000000000110100101000010, 27), // 202: 0 0.00%
        new Symbol(0b110000000000110100101000011, 27), // 203: 0 0.00%
        new Symbol(0b110000000000110100101000100, 27), // 204: 0 0.00%
        new Symbol(0b110000000000110100101000101, 27), // 205: 0 0.00%
        new Symbol(0b110000000000110100101000110, 27), // 206: 0 0.00%
        new Symbol(0b110000000000110100101000111, 27), // 207: 0 0.00%
        new Symbol(0b110000000000110100101001000, 27), // 208: 0 0.00%
        new Symbol(0b110000000000110100101001001, 27), // 209: 0 0.00%
        new Symbol(0b110000000000110100101001010, 27), // 210: 0 0.00%
        new Symbol(0b110000000000110100101001011, 27), // 211: 0 0.00%
        new Symbol(0b110000000000110100101001100, 27), // 212: 0 0.00%
        new Symbol(0b110000000000110100101001101, 27), // 213: 0 0.00%
        new Symbol(0b110000000000110100101001110, 27), // 214: 0 0.00%
        new Symbol(0b110000000000110100101001111, 27), // 215: 0 0.00%
        new Symbol(0b110000000000110100101010000, 27), // 216: 0 0.00%
        new Symbol(0b110000000000110100101010001, 27), // 217: 0 0.00%
        new Symbol(0b110000000000110100101010010, 27), // 218: 0 0.00%
        new Symbol(0b110000000000110100101010011, 27), // 219: 0 0.00%
        new Symbol(0b110000000000110100101010100, 27), // 220: 0 0.00%
        new Symbol(0b110000000000110100101010101, 27), // 221: 0 0.00%
        new Symbol(0b110000000000110100101010110, 27), // 222: 0 0.00%
        new Symbol(0b110000000000110100101010111, 27), // 223: 0 0.00%
        new Symbol(0b110000000000110100101011000, 27), // 224: 0 0.00%
        new Symbol(0b110000000000110100101011001, 27), // 225: 0 0.00%
        new Symbol(0b110000000000110100101011010, 27), // 226: 0 0.00%
        new Symbol(0b110000000000110100101011011, 27), // 227: 0 0.00%
        new Symbol(0b110000000000110100101011100, 27), // 228: 0 0.00%
        new Symbol(0b110000000000110100101011101, 27), // 229: 0 0.00%
        new Symbol(0b110000000000110100101011110, 27), // 230: 0 0.00%
        new Symbol(0b110000000000110100101011111, 27), // 231: 0 0.00%
        new Symbol(0b110000000000110100101100000, 27), // 232: 0 0.00%
        new Symbol(0b110000000000110100101100001, 27), // 233: 0 0.00%
        new Symbol(0b110000000000110100101100010, 27), // 234: 0 0.00%
        new Symbol(0b110000000000110100101100011, 27), // 235: 0 0.00%
        new Symbol(0b110000000000110100101100100, 27), // 236: 0 0.00%
        new Symbol(0b110000000000110100101100101, 27), // 237: 0 0.00%
        new Symbol(0b110000000000110100101100110, 27), // 238: 0 0.00%
        new Symbol(0b110000000000110100101100111, 27), // 239: 0 0.00%
        new Symbol(0b110000000000110100101101000, 27), // 240: 0 0.00%
        new Symbol(0b110000000000110100101101001, 27), // 241: 0 0.00%
        new Symbol(0b110000000000110100101101010, 27), // 242: 0 0.00%
        new Symbol(0b110000000000110100101101011, 27), // 243: 0 0.00%
        new Symbol(0b110000000000110100101101100, 27), // 244: 0 0.00%
        new Symbol(0b110000000000110100101101101, 27), // 245: 0 0.00%
        new Symbol(0b110000000000110100101101110, 27), // 246: 0 0.00%
        new Symbol(0b110000000000110100101101111, 27), // 247: 0 0.00%
        new Symbol(0b110000000000110100101110000, 27), // 248: 0 0.00%
        new Symbol(0b110000000000110100101110001, 27), // 249: 0 0.00%
        new Symbol(0b110000000000110100101110010, 27), // 250: 0 0.00%
        new Symbol(0b110000000000110100101110011, 27), // 251: 0 0.00%
        new Symbol(0b110000000000110100101110100, 27), // 252: 0 0.00%
        new Symbol(0b110000000000110100101110101, 27), // 253: 0 0.00%
        new Symbol(0b110000000000110100101110110, 27), // 254: 0 0.00%
        new Symbol(0b110000000000110100101110111, 27), // 255: 0 0.00%
    };
    private static final Symbol ENDGAME_CODES[] = { 
        new Symbol(0b10, 2), // 0: 29242585 24.16%
        new Symbol(0b11, 3), // 1: 14418614 11.91%
        new Symbol(0b0, 4), // 2: 10420433 8.61%
        new Symbol(0b10, 4), // 3: 9431801 7.79%
        new Symbol(0b11, 4), // 4: 8389622 6.93%
        new Symbol(0b1101, 4), // 5: 6371200 5.26%
        new Symbol(0b10, 5), // 6: 5072547 4.19%
        new Symbol(0b1000, 5), // 7: 4345547 3.59%
        new Symbol(0b1010, 5), // 8: 3813106 3.15%
        new Symbol(0b1011, 5), // 9: 3453388 2.85%
        new Symbol(0b11001, 5), // 10: 3150763 2.60%
        new Symbol(0b11101, 5), // 11: 2887695 2.39%
        new Symbol(0b11110, 5), // 12: 2631354 2.17%
        new Symbol(0b110, 6), // 13: 2377000 1.96%
        new Symbol(0b10010, 6), // 14: 2121708 1.75%
        new Symbol(0b10011, 6), // 15: 1874020 1.55%
        new Symbol(0b110001, 6), // 16: 1639754 1.35%
        new Symbol(0b111001, 6), // 17: 1424015 1.18%
        new Symbol(0b111111, 6), // 18: 1226756 1.01%
        new Symbol(0b1111, 7), // 19: 1034178 0.85%
        new Symbol(0b1100001, 7), // 20: 877074 0.72%
        new Symbol(0b1110001, 7), // 21: 743238 0.61%
        new Symbol(0b1111101, 7), // 22: 621259 0.51%
        new Symbol(0b11101, 8), // 23: 531059 0.44%
        new Symbol(0b11000001, 8), // 24: 455090 0.38%
        new Symbol(0b11100001, 8), // 25: 389749 0.32%
        new Symbol(0b11111001, 8), // 26: 329305 0.27%
        new Symbol(0b111001, 9), // 27: 277357 0.23%
        new Symbol(0b110000001, 9), // 28: 235493 0.19%
        new Symbol(0b111000001, 9), // 29: 193123 0.16%
        new Symbol(0b111110001, 9), // 30: 161241 0.13%
        new Symbol(0b1110001, 10), // 31: 135080 0.11%
        new Symbol(0b1100000001, 10), // 32: 114185 0.09%
        new Symbol(0b1110000001, 10), // 33: 96468 0.08%
        new Symbol(0b1111100001, 10), // 34: 82574 0.07%
        new Symbol(0b11100001, 11), // 35: 70067 0.06%
        new Symbol(0b11000000001, 11), // 36: 60426 0.05%
        new Symbol(0b11100000001, 11), // 37: 51578 0.04%
        new Symbol(0b11111000001, 11), // 38: 44078 0.04%
        new Symbol(0b111000001, 12), // 39: 37238 0.03%
        new Symbol(0b110000000001, 12), // 40: 32035 0.03%
        new Symbol(0b111000000001, 12), // 41: 26879 0.02%
        new Symbol(0b111110000000, 12), // 42: 23103 0.02%
        new Symbol(0b1110000000, 13), // 43: 19525 0.02%
        new Symbol(0b1100000000000, 13), // 44: 16584 0.01%
        new Symbol(0b1110000000000, 13), // 45: 13844 0.01%
        new Symbol(0b1111100000010, 13), // 46: 11890 0.01%
        new Symbol(0b11100000010, 14), // 47: 9601 0.01%
        new Symbol(0b11000000000010, 14), // 48: 8341 0.01%
        new Symbol(0b11100000000010, 14), // 49: 6937 0.01%
        new Symbol(0b11111000000110, 14), // 50: 5593 0.00%
        new Symbol(0b111000000111, 15), // 51: 4633 0.00%
        new Symbol(0b110000000000111, 15), // 52: 3789 0.00%
        new Symbol(0b111000000000111, 15), // 53: 3114 0.00%
        new Symbol(0b1110000001100, 16), // 54: 2541 0.00%
        new Symbol(0b1100000000001100, 16), // 55: 2096 0.00%
        new Symbol(0b1110000000001100, 16), // 56: 1786 0.00%
        new Symbol(0b1111100000011101, 16), // 57: 1473 0.00%
        new Symbol(0b1111100000011111, 16), // 58: 1244 0.00%
        new Symbol(0b11100000011011, 17), // 59: 1062 0.00%
        new Symbol(0b11000000000011011, 17), // 60: 960 0.00%
        new Symbol(0b11111000000111000, 17), // 61: 810 0.00%
        new Symbol(0b11111000000111100, 17), // 62: 680 0.00%
        new Symbol(0b111000000110101, 18), // 63: 562 0.00%
        new Symbol(0b110000000000110101, 18), // 64: 486 0.00%
        new Symbol(0b111000000000110100, 18), // 65: 477 0.00%
        new Symbol(0b111000000000110111, 18), // 66: 410 0.00%
        new Symbol(0b111110000001110011, 18), // 67: 344 0.00%
        new Symbol(0b111110000001111010, 18), // 68: 318 0.00%
        new Symbol(0b1110000001101000, 19), // 69: 301 0.00%
        new Symbol(0b1100000000001101000, 19), // 70: 251 0.00%
        new Symbol(0b1110000000001101100, 19), // 71: 223 0.00%
        new Symbol(0b1111100000011100101, 19), // 72: 188 0.00%
        new Symbol(0b1111100000011100100, 19), // 73: 199 0.00%
        new Symbol(0b1111100000011110111, 19), // 74: 143 0.00%
        new Symbol(0b11100000000011010101, 20), // 75: 115 0.00%
        new Symbol(0b11100000000011010100, 20), // 76: 117 0.00%
        new Symbol(0b11000000000011010011, 20), // 77: 120 0.00%
        new Symbol(0b11100000000011010111, 20), // 78: 111 0.00%
        new Symbol(0b11111000000111101100, 20), // 79: 93 0.00%
        new Symbol(0b111000000110100100, 21), // 80: 74 0.00%
        new Symbol(0b111000000110100101, 21), // 81: 67 0.00%
        new Symbol(0b111000000000110110100, 21), // 82: 55 0.00%
        new Symbol(0b111000000000110110110, 21), // 83: 49 0.00%
        new Symbol(0b111000000000110110101, 21), // 84: 55 0.00%
        new Symbol(0b111110000001111011011, 21), // 85: 33 0.00%
        new Symbol(0b1110000001101001100, 22), // 86: 32 0.00%
        new Symbol(0b1110000000001101011000, 22), // 87: 29 0.00%
        new Symbol(0b1110000001101001101, 22), // 88: 32 0.00%
        new Symbol(0b1110000000001101011001, 22), // 89: 28 0.00%
        new Symbol(0b1110000000001101011010, 22), // 90: 28 0.00%
        new Symbol(0b1110000000001101011011, 22), // 91: 27 0.00%
        new Symbol(0b1111100000011110110100, 22), // 92: 21 0.00%
        new Symbol(0b11100000011010011101, 23), // 93: 15 0.00%
        new Symbol(0b11111000000111101101011, 23), // 94: 9 0.00%
        new Symbol(0b11111000000111101101010, 23), // 95: 10 0.00%
        new Symbol(0b11100000000011011011100, 23), // 96: 12 0.00%
        new Symbol(0b11100000000011011011101, 23), // 97: 12 0.00%
        new Symbol(0b110000000000110100101111, 24), // 98: 6 0.00%
        new Symbol(0b111000000110100111001, 24), // 99: 7 0.00%
        new Symbol(0b111000000000110110111100, 24), // 100: 2 0.00%
        new Symbol(0b111000000000110110111101, 24), // 101: 4 0.00%
        new Symbol(0b111000000000110110111110, 24), // 102: 5 0.00%
        new Symbol(0b1110000000001101101111110, 25), // 103: 5 0.00%
        new Symbol(0b1110000001101001110000, 25), // 104: 0 0.00%
        new Symbol(0b1110000000001101101111111, 25), // 105: 5 0.00%
        new Symbol(0b11100000011010011100010, 26), // 106: 1 0.00%
        new Symbol(0b11100000011010011100011, 26), // 107: 1 0.00%
        new Symbol(0b11100000011010011110001, 26), // 108: 0 0.00%
        new Symbol(0b11100000011010011110010, 26), // 109: 1 0.00%
        new Symbol(0b11100000011010011110011, 26), // 110: 2 0.00%
        new Symbol(0b11100000011010011110101, 26), // 111: 1 0.00%
        new Symbol(0b111000000110100111100000, 27), // 112: 1 0.00%
        new Symbol(0b111000000110100111100001, 27), // 113: 0 0.00%
        new Symbol(0b111000000110100111101000, 27), // 114: 0 0.00%
        new Symbol(0b111000000110100111101001, 27), // 115: 1 0.00%
        new Symbol(0b111000000110100111101100, 27), // 116: 0 0.00%
        new Symbol(0b111000000110100111101101, 27), // 117: 0 0.00%
        new Symbol(0b111000000110100111101110, 27), // 118: 0 0.00%
        new Symbol(0b111000000110100111101111, 27), // 119: 0 0.00%
        new Symbol(0b111000000110100111110000, 27), // 120: 0 0.00%
        new Symbol(0b111000000110100111110001, 27), // 121: 0 0.00%
        new Symbol(0b111000000110100111110010, 27), // 122: 0 0.00%
        new Symbol(0b111000000110100111110011, 27), // 123: 0 0.00%
        new Symbol(0b111000000110100111110100, 27), // 124: 0 0.00%
        new Symbol(0b111000000110100111110101, 27), // 125: 0 0.00%
        new Symbol(0b111000000110100111110110, 27), // 126: 0 0.00%
        new Symbol(0b111000000110100111110111, 27), // 127: 0 0.00%
        new Symbol(0b111000000110100111111000, 27), // 128: 0 0.00%
        new Symbol(0b111000000110100111111001, 27), // 129: 0 0.00%
        new Symbol(0b111000000110100111111010, 27), // 130: 0 0.00%
        new Symbol(0b111000000110100111111011, 27), // 131: 0 0.00%
        new Symbol(0b111000000110100111111100, 27), // 132: 0 0.00%
        new Symbol(0b111000000110100111111101, 27), // 133: 0 0.00%
        new Symbol(0b111000000110100111111110, 27), // 134: 0 0.00%
        new Symbol(0b111000000110100111111111, 27), // 135: 0 0.00%
        new Symbol(0b110000000000110100100000000, 27), // 136: 0 0.00%
        new Symbol(0b110000000000110100100000001, 27), // 137: 0 0.00%
        new Symbol(0b110000000000110100100000010, 27), // 138: 0 0.00%
        new Symbol(0b110000000000110100100000011, 27), // 139: 0 0.00%
        new Symbol(0b110000000000110100100000100, 27), // 140: 0 0.00%
        new Symbol(0b110000000000110100100000101, 27), // 141: 0 0.00%
        new Symbol(0b110000000000110100100000110, 27), // 142: 0 0.00%
        new Symbol(0b110000000000110100100000111, 27), // 143: 0 0.00%
        new Symbol(0b110000000000110100100001000, 27), // 144: 0 0.00%
        new Symbol(0b110000000000110100100001001, 27), // 145: 0 0.00%
        new Symbol(0b110000000000110100100001010, 27), // 146: 0 0.00%
        new Symbol(0b110000000000110100100001011, 27), // 147: 0 0.00%
        new Symbol(0b110000000000110100100001100, 27), // 148: 0 0.00%
        new Symbol(0b110000000000110100100001101, 27), // 149: 0 0.00%
        new Symbol(0b110000000000110100100001110, 27), // 150: 0 0.00%
        new Symbol(0b110000000000110100100001111, 27), // 151: 0 0.00%
        new Symbol(0b110000000000110100100010000, 27), // 152: 0 0.00%
        new Symbol(0b110000000000110100100010001, 27), // 153: 0 0.00%
        new Symbol(0b110000000000110100100010010, 27), // 154: 0 0.00%
        new Symbol(0b110000000000110100100010011, 27), // 155: 0 0.00%
        new Symbol(0b110000000000110100100010100, 27), // 156: 0 0.00%
        new Symbol(0b110000000000110100100010101, 27), // 157: 0 0.00%
        new Symbol(0b110000000000110100100010110, 27), // 158: 0 0.00%
        new Symbol(0b110000000000110100100010111, 27), // 159: 0 0.00%
        new Symbol(0b110000000000110100100011000, 27), // 160: 0 0.00%
        new Symbol(0b110000000000110100100011001, 27), // 161: 0 0.00%
        new Symbol(0b110000000000110100100011010, 27), // 162: 0 0.00%
        new Symbol(0b110000000000110100100011011, 27), // 163: 0 0.00%
        new Symbol(0b110000000000110100100011100, 27), // 164: 0 0.00%
        new Symbol(0b110000000000110100100011101, 27), // 165: 0 0.00%
        new Symbol(0b110000000000110100100011110, 27), // 166: 0 0.00%
        new Symbol(0b110000000000110100100011111, 27), // 167: 0 0.00%
        new Symbol(0b110000000000110100100100000, 27), // 168: 0 0.00%
        new Symbol(0b110000000000110100100100001, 27), // 169: 0 0.00%
        new Symbol(0b110000000000110100100100010, 27), // 170: 0 0.00%
        new Symbol(0b110000000000110100100100011, 27), // 171: 0 0.00%
        new Symbol(0b110000000000110100100100100, 27), // 172: 0 0.00%
        new Symbol(0b110000000000110100100100101, 27), // 173: 0 0.00%
        new Symbol(0b110000000000110100100100110, 27), // 174: 0 0.00%
        new Symbol(0b110000000000110100100100111, 27), // 175: 0 0.00%
        new Symbol(0b110000000000110100100101000, 27), // 176: 0 0.00%
        new Symbol(0b110000000000110100100101001, 27), // 177: 0 0.00%
        new Symbol(0b110000000000110100100101010, 27), // 178: 0 0.00%
        new Symbol(0b110000000000110100100101011, 27), // 179: 0 0.00%
        new Symbol(0b110000000000110100100101100, 27), // 180: 0 0.00%
        new Symbol(0b110000000000110100100101101, 27), // 181: 0 0.00%
        new Symbol(0b110000000000110100100101110, 27), // 182: 0 0.00%
        new Symbol(0b110000000000110100100101111, 27), // 183: 0 0.00%
        new Symbol(0b110000000000110100100110000, 27), // 184: 0 0.00%
        new Symbol(0b110000000000110100100110001, 27), // 185: 0 0.00%
        new Symbol(0b110000000000110100100110010, 27), // 186: 0 0.00%
        new Symbol(0b110000000000110100100110011, 27), // 187: 0 0.00%
        new Symbol(0b110000000000110100100110100, 27), // 188: 0 0.00%
        new Symbol(0b110000000000110100100110101, 27), // 189: 0 0.00%
        new Symbol(0b110000000000110100100110110, 27), // 190: 0 0.00%
        new Symbol(0b110000000000110100100110111, 27), // 191: 0 0.00%
        new Symbol(0b110000000000110100100111000, 27), // 192: 0 0.00%
        new Symbol(0b110000000000110100100111001, 27), // 193: 0 0.00%
        new Symbol(0b110000000000110100100111010, 27), // 194: 0 0.00%
        new Symbol(0b110000000000110100100111011, 27), // 195: 0 0.00%
        new Symbol(0b110000000000110100100111100, 27), // 196: 0 0.00%
        new Symbol(0b110000000000110100100111101, 27), // 197: 0 0.00%
        new Symbol(0b110000000000110100100111110, 27), // 198: 0 0.00%
        new Symbol(0b110000000000110100100111111, 27), // 199: 0 0.00%
        new Symbol(0b110000000000110100101000000, 27), // 200: 0 0.00%
        new Symbol(0b110000000000110100101000001, 27), // 201: 0 0.00%
        new Symbol(0b110000000000110100101000010, 27), // 202: 0 0.00%
        new Symbol(0b110000000000110100101000011, 27), // 203: 0 0.00%
        new Symbol(0b110000000000110100101000100, 27), // 204: 0 0.00%
        new Symbol(0b110000000000110100101000101, 27), // 205: 0 0.00%
        new Symbol(0b110000000000110100101000110, 27), // 206: 0 0.00%
        new Symbol(0b110000000000110100101000111, 27), // 207: 0 0.00%
        new Symbol(0b110000000000110100101001000, 27), // 208: 0 0.00%
        new Symbol(0b110000000000110100101001001, 27), // 209: 0 0.00%
        new Symbol(0b110000000000110100101001010, 27), // 210: 0 0.00%
        new Symbol(0b110000000000110100101001011, 27), // 211: 0 0.00%
        new Symbol(0b110000000000110100101001100, 27), // 212: 0 0.00%
        new Symbol(0b110000000000110100101001101, 27), // 213: 0 0.00%
        new Symbol(0b110000000000110100101001110, 27), // 214: 0 0.00%
        new Symbol(0b110000000000110100101001111, 27), // 215: 0 0.00%
        new Symbol(0b110000000000110100101010000, 27), // 216: 0 0.00%
        new Symbol(0b110000000000110100101010001, 27), // 217: 0 0.00%
        new Symbol(0b110000000000110100101010010, 27), // 218: 0 0.00%
        new Symbol(0b110000000000110100101010011, 27), // 219: 0 0.00%
        new Symbol(0b110000000000110100101010100, 27), // 220: 0 0.00%
        new Symbol(0b110000000000110100101010101, 27), // 221: 0 0.00%
        new Symbol(0b110000000000110100101010110, 27), // 222: 0 0.00%
        new Symbol(0b110000000000110100101010111, 27), // 223: 0 0.00%
        new Symbol(0b110000000000110100101011000, 27), // 224: 0 0.00%
        new Symbol(0b110000000000110100101011001, 27), // 225: 0 0.00%
        new Symbol(0b110000000000110100101011010, 27), // 226: 0 0.00%
        new Symbol(0b110000000000110100101011011, 27), // 227: 0 0.00%
        new Symbol(0b110000000000110100101011100, 27), // 228: 0 0.00%
        new Symbol(0b110000000000110100101011101, 27), // 229: 0 0.00%
        new Symbol(0b110000000000110100101011110, 27), // 230: 0 0.00%
        new Symbol(0b110000000000110100101011111, 27), // 231: 0 0.00%
        new Symbol(0b110000000000110100101100000, 27), // 232: 0 0.00%
        new Symbol(0b110000000000110100101100001, 27), // 233: 0 0.00%
        new Symbol(0b110000000000110100101100010, 27), // 234: 0 0.00%
        new Symbol(0b110000000000110100101100011, 27), // 235: 0 0.00%
        new Symbol(0b110000000000110100101100100, 27), // 236: 0 0.00%
        new Symbol(0b110000000000110100101100101, 27), // 237: 0 0.00%
        new Symbol(0b110000000000110100101100110, 27), // 238: 0 0.00%
        new Symbol(0b110000000000110100101100111, 27), // 239: 0 0.00%
        new Symbol(0b110000000000110100101101000, 27), // 240: 0 0.00%
        new Symbol(0b110000000000110100101101001, 27), // 241: 0 0.00%
        new Symbol(0b110000000000110100101101010, 27), // 242: 0 0.00%
        new Symbol(0b110000000000110100101101011, 27), // 243: 0 0.00%
        new Symbol(0b110000000000110100101101100, 27), // 244: 0 0.00%
        new Symbol(0b110000000000110100101101101, 27), // 245: 0 0.00%
        new Symbol(0b110000000000110100101101110, 27), // 246: 0 0.00%
        new Symbol(0b110000000000110100101101111, 27), // 247: 0 0.00%
        new Symbol(0b110000000000110100101110000, 27), // 248: 0 0.00%
        new Symbol(0b110000000000110100101110001, 27), // 249: 0 0.00%
        new Symbol(0b110000000000110100101110010, 27), // 250: 0 0.00%
        new Symbol(0b110000000000110100101110011, 27), // 251: 0 0.00%
        new Symbol(0b110000000000110100101110100, 27), // 252: 0 0.00%
        new Symbol(0b110000000000110100101110101, 27), // 253: 0 0.00%
        new Symbol(0b110000000000110100101110110, 27), // 254: 0 0.00%
        new Symbol(0b110000000000110100101110111, 27), // 255: 0 0.00%
    };

    private static final Node OPENING_ROOT = buildTree(0, 0, OPENING_CODES);
    private static final Node MIDDLEGAME_ROOT = buildTree(0, 0, MIDDLEGAME_CODES);
    private static final Node ENDGAME_ROOT = buildTree(0, 0, ENDGAME_CODES);
}
